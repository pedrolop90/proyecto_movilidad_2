create  database if not exists proyecto_movilidad;

  create table if not exists pais(
  id_pais integer auto_increment,
  codigo varchar(2) not null,
  nombre varchar(30) not null,
  estado integer(1) default 1,
  constraint primaria_pais primary key(id_pais)
  );



create table if not exists mensaje(
id_mensaje integer auto_increment,
codigo varchar(10) not null,
nombre varchar(60) not null,
correo varchar(100) not null,
descripcion varchar(250) not null,
fecha_enviado timestamp default CURRENT_TIMESTAMP,
estado integer(1) default 1,
constraint primaria_contacto primary key(id_mensaje)
);

create table if not exists  universidad(
id_universidad integer auto_increment,
nombre varchar(30) not null,
id_pais integer not null,
estado integer(1) default 1,
constraint foranea_universidad_pais foreign key(id_pais) references pais(id_pais),
constraint primaria_universidad primary key(id_universidad)
);

create table if not exists  admin(
id_admin integer auto_increment,
usuario varchar(60) not null,
password varchar(60) not null,
constraint primaria_admin primary key(id_admin)
);

insert into admin values(0,'123','123');

create table if not exists  experiencia(
id_experiencia integer auto_increment,
id_universidad integer not null,
url_video varchar(200) not null,
estado int(1) not null default 1,
constraint foranea_experiencia_universidad foreign key(id_universidad) references universidad(id_universidad),
constraint primaria_experiencia primary key(id_experiencia)
);

create table if not exists  requisito(
id_requisito integer auto_increment,
nombre varchar(60) not null,
descripcion varchar(200) not null,
constraint primaria_requisito primary key(id_requisito)
);

create table if not exists  universidad_requisito(
id_universidad_requisito integer auto_increment,
id_universidad integer not null,
id_requisito integer not null,
constraint foranea_universidad_requisito_universidad foreign key(id_universidad) references universidad(id_universidad),
constraint foranea_universidad_requisito_requisito foreign key(id_requisito) references requisito(id_requisito),
constraint primaria_universidad_requisito primary key(id_universidad_requisito)
);

create table if not exists  tipo_movilidad(
id_tipo_movilidad integer auto_increment,
nombre varchar(60) not null,
descripcion varchar(200) not null,
estado integer(1) default 1,
constraint primaria_tipo_movilidad primary key(id_tipo_movilidad)
);


create table if not exists  tipo_movilidad_requisito(
id_tipo_movilidad_requisito integer auto_increment,
id_tipo_movilidad integer not null,
id_requisito integer not null,
constraint foranea_tipo_movilidad_requisito_tipo_movilidad foreign key(id_tipo_movilidad) references tipo_movilidad(id_tipo_movilidad),
constraint foranea_tipo_movilidad_requisito_requisito foreign key(id_requisito) references requisito(id_requisito),
constraint primaria_tipo_movilidad_requisito primary key(id_tipo_movilidad_requisito)
);


create table if not exists convenio_marco(
id_convenio_marco integer auto_increment,
nombre varchar(60) not null,
descripcion varchar(200) not null,
constraint primaria_convenio_marco primary key(id_convenio_marco)
);


create table if not exists convenio_especifico(
id_convenio_especifico integer auto_increment,
nombre varchar(60) not null,
descripcion varchar(200) not null,
constraint foranea_convenio_especifico_convenio_marco foreign key(id_convenio_especifico) references convenio_marco(id_convenio_marco),
constraint primaria_convenio_especifico primary key(id_convenio_especifico)
);

create table if not exists  convenio(
id_convenio integer auto_increment,
nombre varchar(60) not null,
descripcion varchar(200) not null,
id_tipo_movilidad integer not null,
id_convenio_especifico integer not null,
id_universidad integer not null,
estado integer(1) default 1,
constraint foranea_convenio_universidad foreign key(id_universidad) references universidad(id_universidad),
constraint foranea_convenio_convenio_especifico foreign key(id_convenio_especifico) references convenio_especifico(id_convenio_especifico),
constraint foranea_convenio_tipo_movilidad foreign key(id_tipo_movilidad) references tipo_movilidad(id_tipo_movilidad),
constraint primaria_convenio primary key(id_convenio)
);



create table if not exists convenio_especifico_requisito(
id_convenio_especifico_requisito integer auto_increment,
id_requisito integer not null,
id_convenio_especifico integer not null,
constraint foaranea_convenio_especifico_requisito foreign key(id_requisito)
references requisito(id_requisito),
constraint foranea_convenio_especifico_requisito_convenio_especifico foreign key(id_convenio_especifico)
references convenio_especifico(id_convenio_especifico),
constraint primaria_convenio_especifico_requisito primary key(id_convenio_especifico_requisito)
);


create table if not exists  convenio_requisito(
id_convenio_requisito integer auto_increment,
id_convenio integer not null,
id_requisito integer not null,
constraint foranea_convenio_requisito_convenio foreign key(id_convenio) references convenio(id_convenio),
constraint foranea_convenio_requisito_requisito foreign key(id_requisito) references requisito(id_requisito),
constraint primaria_convenio_requisito primary key(id_convenio_requisito)
);



INSERT INTO `pais` (codigo, nombre) VALUES
('AU', 'Australia'),
('CN', 'China'),
('JP', 'Japan'),
('TH', 'Thailand'),
('IN', 'India'),
('MY', 'Malaysia'),
('KR', 'Kore'),
('HK', 'Hong Kong'),
('TW', 'Taiwan'),
('PH', 'Philippines'),
('VN', 'Vietnam'),
('FR', 'France'),
('EU', 'Europe'),
('DE', 'Germany'),
('SE', 'Sweden'),
('IT', 'Italy'),
('GR', 'Greece'),
('ES', 'Spain'),
('AT', 'Austria'),
('GB', 'United Kingdom'),
('NL', 'Netherlands'),
('BE', 'Belgium'),
('CH', 'Switzerland'),
('AE', 'United Arab Emirates'),
('IL', 'Israel'),
('UA', 'Ukraine'),
('RU', 'Russian Federation'),
('KZ', 'Kazakhstan'),
('PT', 'Portugal'),
('SA', 'Saudi Arabia'),
('DK', 'Denmark'),
('IR', 'Ira'),
('NO', 'Norway'),
('US', 'United States'),
('MX', 'Mexico'),
('CA', 'Canada'),
('A1', 'Anonymous Proxy'),
('SY', 'Syrian Arab Republic'),
('CY', 'Cyprus'),
('CZ', 'Czech Republic'),
('IQ', 'Iraq'),
('TR', 'Turkey'),
('RO', 'Romania'),
('LB', 'Lebanon'),
('HU', 'Hungary'),
('GE', 'Georgia'),
('BR', 'Brazil'),
('AZ', 'Azerbaijan'),
('A2', 'Satellite Provider'),
('PS', 'Palestinian Territory'),
('LT', 'Lithuania'),
('OM', 'Oman'),
('SK', 'Slovakia'),
('RS', 'Serbia'),
('FI', 'Finland'),
('IS', 'Iceland'),
('BG', 'Bulgaria'),
('SI', 'Slovenia'),
('MD', 'Moldov'),
('MK', 'Macedonia'),
('LI', 'Liechtenstein'),
('JE', 'Jersey'),
('PL', 'Poland'),
('HR', 'Croatia'),
('BA', 'Bosnia and Herzegovina'),
('EE', 'Estonia'),
('LV', 'Latvia'),
('JO', 'Jordan'),
('KG', 'Kyrgyzstan'),
('RE', 'Reunion'),
('IE', 'Ireland'),
('LY', 'Libya'),
('LU', 'Luxembourg'),
('AM', 'Armenia'),
('VG', 'Virgin Island'),
('YE', 'Yemen'),
('BY', 'Belarus'),
('GI', 'Gibraltar'),
('MQ', 'Martinique'),
('PA', 'Panama'),
('DO', 'Dominican Republic'),
('GU', 'Guam'),
('PR', 'Puerto Rico'),
('VI', 'Virgin Island'),
('MN', 'Mongolia'),
('NZ', 'New Zealand'),
('SG', 'Singapore'),
('ID', 'Indonesia'),
('NP', 'Nepal'),
('PG', 'Papua New Guinea'),
('PK', 'Pakistan'),
('AP', 'Asia/Pacific Region'),
('BS', 'Bahamas'),
('LC', 'Saint Lucia'),
('AR', 'Argentina'),
('BD', 'Bangladesh'),
('TK', 'Tokelau'),
('KH', 'Cambodia'),
('MO', 'Macau'),
('MV', 'Maldives'),
('AF', 'Afghanistan'),
('NC', 'New Caledonia'),
('FJ', 'Fiji'),
('WF', 'Wallis and Futuna'),
('QA', 'Qatar'),
('AL', 'Albania'),
('BZ', 'Belize'),
('UZ', 'Uzbekistan'),
('KW', 'Kuwait'),
('ME', 'Montenegro'),
('PE', 'Peru'),
('BM', 'Bermuda'),
('CW', 'Curacao'),
('CO', 'Colombia'),
('VE', 'Venezuela'),
('CL', 'Chile'),
('EC', 'Ecuador'),
('ZA', 'South Africa'),
('IM', 'Isle of Man'),
('BO', 'Bolivia'),
('GG', 'Guernsey'),
('MT', 'Malta'),
('TJ', 'Tajikistan'),
('SC', 'Seychelles'),
('BH', 'Bahrain'),
('EG', 'Egypt'),
('ZW', 'Zimbabwe'),
('LR', 'Liberia'),
('KE', 'Kenya'),
('GH', 'Ghana'),
('NG', 'Nigeria'),
('TZ', 'Tanzani'),
('ZM', 'Zambia'),
('MG', 'Madagascar'),
('AO', 'Angola'),
('NA', 'Namibia'),
('CI', 'Cote D''Ivoire'),
('SD', 'Sudan'),
('CM', 'Cameroon'),
('MW', 'Malawi'),
('GA', 'Gabon'),
('ML', 'Mali'),
('BJ', 'Benin'),
('TD', 'Chad'),
('BW', 'Botswana'),
('CV', 'Cape Verde'),
('RW', 'Rwanda'),
('CG', 'Congo'),
('UG', 'Uganda'),
('MZ', 'Mozambique'),
('GM', 'Gambia'),
('LS', 'Lesotho'),
('MU', 'Mauritius'),
('MA', 'Morocco'),
('DZ', 'Algeria'),
('GN', 'Guinea'),
('CD', 'Cong'),
('SZ', 'Swaziland'),
('BF', 'Burkina Faso'),
('SL', 'Sierra Leone'),
('SO', 'Somalia'),
('NE', 'Niger'),
('CF', 'Central African Republic'),
('TG', 'Togo'),
('BI', 'Burundi'),
('GQ', 'Equatorial Guinea'),
('SS', 'South Sudan'),
('SN', 'Senegal'),
('MR', 'Mauritania'),
('DJ', 'Djibouti'),
('KM', 'Comoros'),
('IO', 'British Indian Ocean Territory'),
('TN', 'Tunisia'),
('GL', 'Greenland'),
('VA', 'Holy See (Vatican City State)'),
('CR', 'Costa Rica'),
('KY', 'Cayman Islands'),
('JM', 'Jamaica'),
('GT', 'Guatemala'),
('MH', 'Marshall Islands'),
('AQ', 'Antarctica'),
('BB', 'Barbados'),
('AW', 'Aruba'),
('MC', 'Monaco'),
('AI', 'Anguilla'),
('KN', 'Saint Kitts and Nevis'),
('GD', 'Grenada'),
('PY', 'Paraguay'),
('MS', 'Montserrat'),
('TC', 'Turks and Caicos Islands'),
('AG', 'Antigua and Barbuda'),
('TV', 'Tuvalu'),
('PF', 'French Polynesia'),
('SB', 'Solomon Islands'),
('VU', 'Vanuatu'),
('ER', 'Eritrea'),
('TT', 'Trinidad and Tobago'),
('AD', 'Andorra'),
('HT', 'Haiti'),
('SH', 'Saint Helena'),
('FM', 'Micronesi'),
('SV', 'El Salvador'),
('HN', 'Honduras'),
('UY', 'Uruguay'),
('LK', 'Sri Lanka'),
('EH', 'Western Sahara'),
('CX', 'Christmas Island'),
('WS', 'Samoa'),
('SR', 'Suriname'),
('CK', 'Cook Islands'),
('KI', 'Kiribati'),
('NU', 'Niue'),
('TO', 'Tonga'),
('TF', 'French Southern Territories'),
('YT', 'Mayotte'),
('NF', 'Norfolk Island'),
('BN', 'Brunei Darussalam'),
('TM', 'Turkmenistan'),
('PN', 'Pitcairn Islands'),
('SM', 'San Marino'),
('AX', 'Aland Islands'),
('FO', 'Faroe Islands'),
('SJ', 'Svalbard and Jan Mayen'),
('CC', 'Cocos (Keeling) Islands'),
('NR', 'Nauru'),
('GS', 'South Georgia and the South Sandwich Islands'),
('UM', 'United States Minor Outlying Islands'),
('GW', 'Guinea-Bissau'),
('PW', 'Palau'),
('AS', 'American Samoa'),
('BT', 'Bhutan'),
('GF', 'French Guiana'),
('GP', 'Guadeloupe'),
('MF', 'Saint Martin'),
('VC', 'Saint Vincent and the Grenadines'),
('PM', 'Saint Pierre and Miquelon'),
('BL', 'Saint Barthelemy'),
('DM', 'Dominica'),
('ST', 'Sao Tome and Principe'),
('KP', 'Kore'),
('FK', 'Falkland Islands (Malvinas)'),
('MP', 'Northern Mariana Islands'),
('TL', 'Timor-Leste'),
('BQ', 'Bonair'),
('MM', 'Myanmar'),
('NI', 'Nicaragua'),
('SX', 'Sint Maarten (Dutch part)'),
('GY', 'Guyana'),
('LA', 'Lao People''s Democratic Republic'),
('CU', 'Cuba'),
('ET', 'Ethiopia');
